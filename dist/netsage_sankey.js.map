{"version":3,"sources":["netsage_sankey.js"],"names":["MetricsPanelCtrl","_","kbn","d3","d3sankey","sankey","panelDefaults","docs_editor_aggregation_options","docs_editor_aggregation","docs_editor_link_width_input","docs_editor_to_Byte","docs_editor_choices","docs_editor_option_nodes","docs_data","table_editor_link_width_label","table_editor_link_width_units","table_editor_choices","table_editor_node_labels","table_editor_option_nodes","table_editor_unitFormats_TEMP","text","submenu","value","table_editor_unitFormats","table_data_type","auto_format_labels","label_nodes","data_type","table_editor_kbnUnitFormats","getUnitFormats","table_data","NetSageSankey","$scope","$injector","defaults","panel","sankeynetsage_holder_id","id","containerDivId","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","dataList","docs_table_data","process_data","render","length","type","console","log","slice","process_docs_data","process_table_data","error","columns","self","i","push","rows","matchingFlow","elk_datapoint","agData","meta","src_ip","src_asn","src_port","protocol","dst_port","dst_asn","dst_ip","forEach","data","datapoints","flowNotExists","sankey_totalFlows","aggregation","k","values","_id","Math","max","min","err","dataRaw","addEditorTab","actions","num","index","splice","subItem","val","hrFormat","factor","b","m","g","t","p","toFixed","ctrl","document","getElementById","getValueFromString","flowRecord","keyString","eval","trim","split","join","sankeyData","source","target","source_option","target_option","includes","label","tData","graph","createSankeyGraphFromData","renderSankey","volume","round","nodes","links","d","name","keys","nest","key","map","indexOf","select","selectAll","remove","units","offw","offh","offsetWidth","offsetHeight","setTimeout","margin","top","right","bottom","left","width","height","formatNumber","format","formatBytes","formatBits","color","scale","category20","svg","empty","append","attr","nodeWidth","nodePadding","size","path","link","layout","y","relayout","nodeLocations","n","x","dx","Object","Number","sort","a","auto_format_node_labels","nodeName","replace","RegExp","node_labels","enter","style","dy","event","getElementsByClassName","el","classList","add","getFormattedValue","node","hl","sourceLinks","sl","targetLinks","tl","flow","cl","monoChromaticSelected","cssText","monochromaticColor","rgb","darker","filter","dragmove","scope","elem","attrs","setup","templateUrl"],"mappings":"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","file":"netsage_sankey.js","sourcesContent":["/*\n * (C) 2018 Tyson Seto-Mook, Laboratory for Advanced Visualization and Applications, University of Hawaii at Manoa.\n */\n\n/*\n  Copyright 2018 The Trustees of Indiana University\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport './css/sankeynetsage_sankey.css!';\nimport d3 from './js/sankeynetsage_d3.v3';\nimport d3sankey from './js/sankeynetsage_sankey.js';\nd3.sankey = d3sankey;\n\n////// place global variables here ////\nconst panelDefaults = {\n    //docs_editor variables\n    docs_editor_aggregation_options: ['Total', 'Average', 'Max', 'Min'],\n    docs_editor_aggregation: 'Total',\n    docs_editor_link_width_input: '',\n    docs_editor_to_Byte: false,\n    docs_editor_choices: [],\n    docs_editor_option_nodes: [],\n    docs_data: [],\n    // table_editor variables\n    table_editor_link_width_label: '',\n    table_editor_link_width_units: '',\n    table_editor_choices: [],\n    table_editor_node_labels: [],\n    table_editor_option_nodes: [], // used to store data mapping\n    table_editor_unitFormats_TEMP: [\n        {\n            text: 'kbn.getUnitFormats()',\n            submenu: [\n                {\n                    text: 'Not implemented yet',\n                    value: 'kbn.getUnitFormats()'\n                },\n                {\n                    text: 'test unit',\n                    value: 'short'\n                }\n            ]\n        }\n    ],\n    table_editor_unitFormats: '',\n    table_data_type: '',\n    // table_data: [],\n    // other variables\n    auto_format_labels: false,\n    label_nodes: [],\n    data_type: '',\n    table_editor_kbnUnitFormats: kbn.getUnitFormats()\n};\n\nlet table_data = [];\nlet docs_data = [];\n\nexport class NetSageSankey extends MetricsPanelCtrl {\n    constructor($scope, $injector) {\n        super($scope, $injector);\n\n        _.defaults(this.panel, panelDefaults);\n        this.sankeynetsage_holder_id = 'sankeynetsage_' + this.panel.id;\n        this.containerDivId = 'container_' + this.sankeynetsage_holder_id;\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        table_data = [];\n        docs_data = [];\n        this.panel.docs_table_data = [];\n        this.panel.label_nodes = [];\n        this.panel.data_type = '';\n        this.process_data(dataList);\n        this.render();\n    }\n\n    // process \"table\" or \"docs\" data types\n    // \"table\" == aggregated data\n    // \"docs\" == full record\n\n    /**\n      * A method to parse and process raw data from grafana\n      * @method process_data\n      * @param {Object} dataList raw data from grafana\n    */\n    process_data(dataList) {\n        if (dataList.length > 0) {\n            // set current data type\n            this.panel.data_type = dataList[0].type;\n            console.log(this.panel.data_type);\n\n            // check if data type is full record\n            if (this.panel.data_type === 'docs') {\n                this.panel.label_nodes = this.panel.docs_editor_option_nodes.slice(0);\n                this.process_docs_data(dataList);\n            } else if (this.panel.data_type === 'table') {\n                this.panel.label_nodes = this.panel.table_editor_node_labels.slice(0);\n                this.process_table_data(dataList);\n            } else {\n                console.error(\n                    \"[!] Sankey plugin Error:  Unknown data type '\",\n                    this.panel.data_type,\n                    \"' cannot process data\"\n                );\n            }\n        } else {\n            console.error('[!] Sankey plugin Error: No data to visualize');\n        }\n    }\n    /**\n      * A method to process table data from grafana\n      * @method process_table_data\n      * @param {Object} dataList table data from grafana\n    */\n    process_table_data(dataList) {\n        this.panel.table_editor_option_nodes = [];\n        this.panel.table_data_type = dataList[0].columns[dataList[0].columns.length - 1].text;\n        var self = this;\n        for (var i = 0; i < dataList[0].columns.length - 1; i++) {\n            self.panel.table_editor_option_nodes.push(dataList[0].columns[i].text);\n        }\n        table_data = dataList[0].rows.slice(0);\n    }\n\n    /**\n      * A method to process docs data from grafana.  \n      * @method process_docs_data\n      * @param {Object} dataList docs data from grafana\n    */\n\n    process_docs_data(dataList) {\n        function matchingFlow(elk_datapoint, agData) {\n            return (\n                elk_datapoint.meta.src_ip === agData.meta.src_ip &&\n                elk_datapoint.meta.src_asn === agData.meta.src_asn &&\n                elk_datapoint.meta.src_port === agData.meta.src_port &&\n                elk_datapoint.meta.protocol === agData.meta.protocol &&\n                elk_datapoint.meta.dst_port === agData.meta.dst_port &&\n                elk_datapoint.meta.dst_asn === agData.meta.dst_asn &&\n                elk_datapoint.meta.dst_ip === agData.meta.dst_ip\n            );\n        }\n\n        // process full records here\n        var self = this;\n        //update with the data!\n        _.forEach(dataList, function (data) {\n            for (var i = 0; i < data.datapoints.length; i++) {\n                var elk_datapoint = data.datapoints[i];\n\n                var flowNotExists = true;\n                if (docs_data.length > 0) {\n                    _.forEach(self.panel.docs_data, function (agData) {\n                        if (matchingFlow(elk_datapoint, agData)) {\n                            flowNotExists = false;\n                            //count total flows\n                            agData.sankey_totalFlows++;\n                            //aggregate data\n                            switch (self.panel.aggregation) {\n                                case 'Average':\n                                    for (var k in agData.values) {\n                                        agData.values[k] += elk_datapoint.values[k];\n                                    }\n                                    break;\n                                case 'Total':\n                                    for (var k in agData.values) {\n                                        agData.values[k] += elk_datapoint.values[k];\n                                    }\n                                    break;\n                                case 'Max':\n                                    for (var k in agData.values) {\n                                        if (agData.values[k] != elk_datapoint.values[k]) console.log(agData._id);\n                                        agData.values[k] = Math.max(agData.values[k], elk_datapoint.values[k]);\n                                    }\n                                    break;\n                                case 'Min':\n                                    for (var k in agData.values) {\n                                        agData.values[k] = Math.min(agData.values[k], elk_datapoint.values[k]);\n                                    }\n                                    break;\n                                default:\n                                    elk_datapoint.sankey_totalFlows++;\n                                    for (var k in agData.values) {\n                                        agData.values[k] += elk_datapoint.values[k];\n                                    }\n                            }\n                        }\n                    });\n                }\n                // add flow if it doesnt exists in aggregated data\n                if (flowNotExists) {\n                    elk_datapoint.sankey_totalFlows = 1;\n                    self.panel.docs_data.push(elk_datapoint);\n                }\n            }\n        });\n\n        // calculate averages for doc type\n        if (self.panel.docs_data.length > 0) {\n            _.forEach(self.panel.docs_data, function (agData) {\n                switch (self.panel.aggregation) {\n                    case 'Average':\n                        for (var k in agData.values) {\n                            agData.values[k] = agData.values[k] / agData.sankey_totalFlows;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n    }\n\n    //runs if there is data error\n    onDataError(err) {\n        this.dataRaw = [];\n    }\n    \n    //runs when user starts editing a panel\n    onInitEditMode() {\n        this.addEditorTab('Raw Documents Options', 'public/plugins/netsage-sankey/docs_editor.html', 2);\n        this.addEditorTab('Aggregated Data Options', 'public/plugins/netsage-sankey/table_editor.html', 2);\n        this.render();\n    }\n\n    //Runs during init panel\n    onInitPanelActions(actions) {\n        this.render();\n    }\n\n    /**\n      * A method to add new option in the edit panel \n      * @method docs_editor_addNewChoice\n    */\n\n    docs_editor_addNewChoice() {\n        var num = this.panel.docs_editor_choices.length + 1;\n        this.panel.docs_editor_choices.push(num);\n        this.panel.docs_editor_option_nodes.push('');\n    }\n\n     /**\n      * A method to remove an option  in the edit panel \n      * @method docs_editor_removeChoice\n    */\n\n    docs_editor_removeChoice(index) {\n        this.panel.docs_editor_choices.splice(index, 1);\n        this.panel.docs_editor_option_nodes.splice(index, 1);\n        if (this.panel.docs_editor_choices.length < 1) this.panel.docs_editor_option_nodes = [];\n    }\n\n    /**\n      * A method to add choice in edit panel\n      * @method table_editor_addNewChoice\n    */\n\n\n    table_editor_addNewChoice() {\n        var num = this.panel.table_editor_choices.length + 1;\n        this.panel.table_editor_choices.push(num);\n        this.panel.table_editor_node_labels.push('');\n    }\n\n    /**\n      * A method to remove an option  in the edit panel \n      * @method table_editor_removeChoice\n    */\n\n\n    table_editor_removeChoice(index) {\n        this.panel.table_editor_choices.splice(index, 1);\n        this.panel.table_editor_node_labels.splice(index, 1);\n        if (this.panel.table_editor_choices.length < 1) this.panel.table_editor_node_labels = [];\n    }\n\n    /**\n      * A method to set unit format\n      * @method setUnitFormat\n      * @param {Object} subItem item from dropdown\n    */\n\n\n    setUnitFormat(subItem) {\n        this.panel.table_editor_unitFormats = subItem.value;\n        this.render();\n    }\n\n    /**\n      * A method to remove an option  in the edit panel \n      * @method formatBytes\n      * @param {Float32Array} val value to convert in Bytes\n    */\n\n    formatBytes(val) {\n        var hrFormat = null;\n        var factor = 1024.0;\n        val = val / 8.0;\n\n        var b = val;\n        var k = val / factor;\n        var m = val / factor / factor;\n        var g = val / factor / factor / factor;\n        var t = val / factor / factor / factor / factor;\n        var p = val / factor / factor / factor / factor / factor;\n\n        if (p > 1) {\n            hrFormat = p.toFixed(2) + '(PB)';\n        } else if (t > 1) {\n            hrFormat = t.toFixed(2) + '(TB)';\n        } else if (g > 1) {\n            hrFormat = g.toFixed(2) + '(GB)';\n        } else if (m > 1) {\n            hrFormat = m.toFixed(2) + '(MB)';\n        } else if (k > 1) {\n            hrFormat = k.toFixed(2) + '(KB)';\n        } else {\n            hrFormat = b.toFixed(2) + '(Bytes)';\n        }\n\n        return hrFormat;\n    }\n\n    /**\n      * A method to remove an option  in the edit panel \n      * @method formatBits\n      * @param {Float32Array} val value to convert in Bits\n    */\n\n\n    formatBits(val) {\n        var hrFormat = null;\n        var factor = 1024.0;\n\n        var b = val;\n        var k = val / factor;\n        var m = val / factor / factor;\n        var g = val / factor / factor / factor;\n        var t = val / factor / factor / factor / factor;\n        var p = val / factor / factor / factor / factor / factor;\n\n        if (p > 1) {\n            hrFormat = p.toFixed(2) + '(Pb)';\n        } else if (t > 1) {\n            hrFormat = t.toFixed(2) + '(Tb)';\n        } else if (g > 1) {\n            hrFormat = g.toFixed(2) + '(Gb)';\n        } else if (m > 1) {\n            hrFormat = m.toFixed(2) + '(Mb)';\n        } else if (k > 1) {\n            hrFormat = k.toFixed(2) + '(Kb)';\n        } else {\n            hrFormat = b.toFixed(2) + '(bits)';\n        }\n\n        return hrFormat;\n    }\n\n    /**\n      * main entry point for setting up the plugin\n      * @method setup\n    */\n\n\n    setup() {\n        var ctrl = this;\n        //check if there is a container to place the graph\n        if (!document.getElementById(ctrl.sankeynetsage_holder_id)) {\n            return;\n        }\n        //not sure what this does\n        function getValueFromString(flowRecord, keyString) {\n            return eval('flowRecord[\"' + keyString.trim().split('.').join('\"][\"') + '\"]');\n        }\n        //to keep values for rendering sankey, either docs or table\n        var sankeyData = [];\n\n        if (ctrl.panel.data_type === 'docs') {\n            // update node labels\n            // convert docs data to sankey data\n            if (docs_data.length > 0) {\n                _.forEach(docs_data, function (agData, index) {\n                    for (var i = 0; i < ctrl.panel.docs_editor_option_nodes.length - 1; i++) {\n                        //get links info\n                        let source = getValueFromString(agData, ctrl.panel.docs_editor_option_nodes[i]);\n                        let target = getValueFromString(agData, ctrl.panel.docs_editor_option_nodes[i + 1]);\n                        let value = getValueFromString(agData, ctrl.panel.docs_editor_link_width_input);\n\n                        // to avoid cyclic sankey, appending (src) and (dst) to names\n                        let source_option = ctrl.panel.docs_editor_option_nodes[i];\n                        let target_option = ctrl.panel.docs_editor_option_nodes[i + 1];\n                        source +=\n                            source_option.includes('src') || source_option.includes('dst')\n                                ? source_option.includes('src') ? ' (src)' : ' (dst)'\n                                : '';\n                        target +=\n                            target_option.includes('src') || target_option.includes('dst')\n                                ? target_option.includes('src') ? ' (src)' : ' (dst)'\n                                : '';\n\n                        // add to sankeyData array\n                        sankeyData.push({\n                            source: source,\n                            target: target,\n                            value: value,\n                            //\"label\":\"flow-\"+index});\n                            label: ctrl.sankeynetsage_holder_id + '_flow-' + index\n                        });\n                    }\n                });\n            }\n        } else if (ctrl.panel.data_type === 'table') {\n            // update node labels\n            if (ctrl.panel.table_editor_node_labels.length > 0) {\n                ctrl.panel.label_nodes = ctrl.panel.table_editor_node_labels.slice(0);\n            } else {\n                ctrl.panel.label_nodes = ctrl.panel.table_editor_option_nodes.slice(0);\n            }\n            // convert table data to sankey data\n            if (table_data.length > 0) {\n                _.forEach(table_data, function (tData, index) {\n                    for (var i = 0; i < tData.length - 2; i++) {\n                        // last index is value, so -2 to prevent using value as a node\n                        //get links info\n                        let source = tData[i];\n                        let target = tData[i + 1];\n                        let value = tData[tData.length - 1];\n\n                        // to avoid cyclic sankey, appending (src) and (dst) to names\n                        let source_option = ctrl.panel.table_editor_option_nodes[i];\n                        let target_option = ctrl.panel.table_editor_option_nodes[i + 1];\n                        source +=\n                            source_option.includes('src') || source_option.includes('dst')\n                                ? source_option.includes('src') ? ' (src)' : ' (dst)'\n                                : '';\n                        target +=\n                            target_option.includes('src') || target_option.includes('dst')\n                                ? target_option.includes('src') ? ' (src)' : ' (dst)'\n                                : '';\n\n                        // add to sankeyData array\n                        sankeyData.push({\n                            source: source,\n                            target: target,\n                            value: value,\n                            //\"label\":\"flow-\"+index});\n                            label: ctrl.sankeynetsage_holder_id + '_flow-' + index\n                        });\n                    }\n                });\n            }\n        }\n\n        // get sankey graph from data\n        var graph = ctrl.createSankeyGraphFromData(sankeyData);\n\n        //render sankey\n        ctrl.renderSankey(graph);\n    }\n\n    /**\n      * A method that returns human readable values \n      * @method getFormattedValue\n      * @param {bigint} value value to convert\n    */\n\n    getFormattedValue(value) {\n        value = value / 1000;\n        var volume = value;\n        if (value < 1000) {\n            volume = Math.round(value * 10) / 10 + ' KB';\n        } else {\n            value = value / 1000;\n            if (value < 1000) {\n                volume = Math.round(value * 10) / 10 + ' MB';\n            } else {\n                value = value / 1000;\n                if (value < 1000) {\n                    volume = Math.round(value * 10) / 10 + ' GB';\n                } else {\n                    value = value / 1000;\n                    if (value < 1000) {\n                        volume = Math.round(value * 10) / 10 + ' TB';\n                    } else {\n                        volume = Math.round(value * 10) / 10 + ' PB';\n                    }\n                }\n            }\n        }\n        return volume;\n    }\n\n    \n\n    /**\n      * A method to  convert data into sankey node/link form \n      * @method createSankeyGraphFromData\n      * @param {Object} data parsed sankey data\n    */\n\n    createSankeyGraphFromData(data) {\n        //set up graph in same style as original example but empty\n        var graph = {\n            nodes: [],\n            links: []\n        };\n\n        data.forEach(function (d) {\n            graph.nodes.push({\n                name: d.source\n            });\n            graph.nodes.push({\n                name: d.target\n            });\n            graph.links.push({\n                source: d.source,\n                target: d.target,\n                value: +d.value,\n                label: d.label\n            });\n        });\n\n        // return only the distinct / unique nodes\n        graph.nodes = d3.keys(\n            d3\n                .nest()\n                .key(function (d) {\n                    return d.name;\n                })\n                .map(graph.nodes)\n        );\n\n        // loop through each link replacing the text with its index from node\n        graph.links.forEach(function (d, i) {\n            graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n            graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n        });\n\n        //now loop through each nodes to make nodes an array of objects\n        // rather than an array of strings\n        graph.nodes.forEach(function (d, i) {\n            graph.nodes[i] = {\n                name: d\n            };\n        });\n\n        return graph;\n    }\n\n    /**\n      * A method to  convert data into sankey node/link form \n      * @method renderSankey\n      * @param {Object} graph list of nodes and links \n    */\n\n    renderSankey(graph) {\n        if (graph.links.length == 0 || graph.nodes.length == 0) {\n            return;\n        }\n\n        var ctrl = this;\n        d3.select('#' + ctrl.containerDivId).selectAll('g').remove();\n\n        var units = 'Widgets';\n\n        var offw = 900;\n        var offh = 450;\n        if (document.getElementById(ctrl.sankeynetsage_holder_id)) {\n            offw = document.getElementById(ctrl.sankeynetsage_holder_id).offsetWidth;\n            offh = document.getElementById(ctrl.sankeynetsage_holder_id).offsetHeight;\n        }\n\n        if (offh == 0) {\n            return setTimeout(function () {\n                ctrl.renderSankey(graph);\n            }, 250);\n        }\n\n        var margin = {\n            top: 10,\n            right: 10,\n            bottom: 10,\n            left: 10\n        };\n        var width = offw - margin.left - margin.right;\n        var height = offh - margin.top - margin.bottom;\n\n        var formatNumber = d3.format(',.0f'); // zero decimal places\n        //var format = function(d) { return formatNumber(d) + \" \" + units; };\n        var format = function (d) {\n            return ctrl.panel.data_type === 'docs'\n                ? ctrl.panel.docs_editor_to_Byte ? ctrl.formatBytes(d) : ctrl.formatBits(d)\n                : d + ' ' + ctrl.panel.table_editor_link_width_label + ' (' + ctrl.panel.table_data_type + ')';\n        };\n        var color = d3.scale.category20();\n\n        // append the svg canvas to the page\n        var svg = d3.select('#sankey_svg_' + ctrl.panel.id);\n        if (svg.empty()) {\n            svg = d3\n                .select('#' + ctrl.containerDivId)\n                .append('svg')\n                .attr('width', '100%')\n                .attr('height', '100%')\n                .attr('id', 'sankey_svg_' + ctrl.panel.id)\n                .attr('class', 'sankey')\n                .append('g');\n        }\n\n        // Set the sankey diagram properties\n        var sankey = d3.sankey().nodeWidth(36).nodePadding(40).size([width, height]);\n\n        var path = sankey.link();\n\n        sankey.nodes(graph.nodes).links(graph.links).layout(32);\n\n        // move nodes down to make space for labels\n        for (let i = 0; i < sankey.nodes().length; i++) {\n            if (sankey.nodes()[i].y < 25) {\n                sankey.nodes()[i].y = 25;\n            }\n        }\n        sankey.relayout();\n\n        // create node location object\n        var nodeLocations = {};\n        // store only unique x positions of the nodes\n        _.forEach(graph.nodes, function (n) {\n            if (!(n.x in nodeLocations)) {\n                nodeLocations[n.x + n.dx / 2] = 1;\n            }\n        });\n        // convert from string to Numbers\n        nodeLocations = Object.keys(nodeLocations).map(Number);\n        nodeLocations = nodeLocations.sort((a, b) => a - b);\n        // add first value to last node value\n        nodeLocations[nodeLocations.length - 1] += nodeLocations[0];\n        // set first value to 0\n        nodeLocations[0] = 0;\n\n        /**\n        * A method to  create human readable node names \n        * @method auto_format_labels\n        * @param {String} nodeName \n        */\n        function auto_format_node_labels(nodeName) {\n            if (ctrl.panel.auto_format_labels) {\n                return nodeName\n                    .replace('meta.', '')\n                    .replace('.keyword', '')\n                    .replace(new RegExp('_', 'g'), ' ')\n                    .replace(new RegExp('[.]', 'g'), ' ')\n                    .replace('src', 'Source')\n                    .replace('dst', 'Destination');\n            }\n            // other wise return same name\n            return nodeName;\n        }\n        // add node labels\n        var node_labels = svg\n            .append('g')\n            .selectAll('.node-label')\n            .data(ctrl.panel.label_nodes)\n            .enter()\n            .append('text')\n            .attr('class', 'node-label')\n            .attr('x', function (d) {\n                return nodeLocations[ctrl.panel.label_nodes.indexOf(d)];\n            })\n            .attr('y', margin.top + 5)\n            .attr('text-anchor', function (d) {\n                switch (ctrl.panel.label_nodes.indexOf(d)) {\n                    case 0:\n                        return 'start';\n                    case ctrl.panel.label_nodes.length - 1:\n                        return 'end';\n                    default:\n                        return 'middle';\n                }\n            })\n            .text(function (d) {\n                return auto_format_node_labels(d);\n            });\n\n        // add in the links\n        var link = svg\n            .append('g')\n            .selectAll('.link')\n            .data(graph.links)\n            .enter()\n            .append('path')\n            .attr('class', function (d) {\n                return 'link' + ' ' + d.label;\n            })\n            .attr('d', path)\n            .style('stroke-width', function (d) {\n                return Math.max(1, d.dy);\n            })\n            .sort(function (a, b) {\n                return b.dy - a.dy;\n            })\n            .on('mouseover', function (event) {\n                _.forEach(document.getElementsByClassName(event.label), function (el) {\n                    el.classList.add('link-highlight');\n                });\n            })\n            .on('mouseout', function (event) {\n                _.forEach(document.getElementsByClassName(event.label), function (el) {\n                    el.classList.remove('link-highlight');\n                });\n            });\n\n        // add the link titles\n        link.append('title').text(function (d) {\n            //return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n            return d.source.name + ' → ' + d.target.name + '\\n' + ctrl.getFormattedValue(d.value);\n        });\n\n        // add in the nodes\n        var node = svg\n            .append('g')\n            .selectAll('.node')\n            .data(graph.nodes)\n            .enter()\n            .append('g')\n            .attr('class', 'node')\n            .attr('transform', function (d) {\n                return 'translate(' + d.x + ',' + d.y + ')';\n            })\n\n            .on('mouseover', function (event) {\n                let hl = [];\n                _.forEach(event.sourceLinks, function (sl) {\n                    hl.push(sl.label);\n                });\n                _.forEach(event.targetLinks, function (tl) {\n                    hl.push(tl.label);\n                });\n                _.forEach(hl, function (flow) {\n                    _.forEach(document.getElementsByClassName(flow), function (el) {\n                        el.classList.add('link-highlight');\n                    });\n                });\n            })\n\n            .on('mouseout', function (event) {\n                let hl = [];\n                _.forEach(event.sourceLinks, function (sl) {\n                    hl.push(sl.label);\n                });\n                _.forEach(event.targetLinks, function (tl) {\n                    hl.push(tl.label);\n                });\n                _.forEach(hl, function (flow) {\n                    _.forEach(document.getElementsByClassName(flow), function (el) {\n                        el.classList.remove('link-highlight');\n                    });\n                });\n            });\n\n        // add the rectangles for the nodes\n        node\n            .append('rect')\n            .attr('height', function (d) {\n                return d.dy;\n            })\n            .attr('width', sankey.nodeWidth())\n            .attr('rx', 3)\n            .style('fill', function (d) {\n                d.color = '#cdcdcd';\n                if (d.targetLinks.length === 0) {\n                    d.color = color(d.name.replace(/ .*/, ''));\n                    let cl = [];\n                    _.forEach(d.sourceLinks, function (sl) {\n                        cl.push(sl.label);\n                    });\n                    _.forEach(cl, function (flow) {\n                        _.forEach(document.getElementsByClassName(flow), function (el) {\n                            //el.style.cssText += \"stroke:\" + d.color + \";\";\n                            console.log(d.color);\n\n                            if (ctrl.panel.monoChromaticSelected) {\n                                el.style.cssText += 'stroke:' + ctrl.panel.monochromaticColor + ';';\n                            } else {\n                                el.style.cssText += 'stroke:' + d.color + ';';\n                            }\n                        });\n                    });\n                }\n                if (ctrl.panel.monoChromaticSelected) {\n                    return ctrl.panel.monochromaticColor;\n                } else {\n                    return d.color;\n                }\n            })\n            .style('stroke', function (d) {\n                return d3.rgb(d.color).darker(2);\n            })\n            .append('title')\n            .text(function (d) {\n                //return d.name + '\\n' + format(d.value);\n                return d.name + '\\n' + ctrl.getFormattedValue(d.value);\n            });\n\n        // add in the title for the nodes\n        node\n            .append('text')\n            .attr('x', -6)\n            .attr('y', function (d) {\n                return d.dy / 2;\n            })\n            .attr('dy', '.35em')\n            .attr('text-anchor', 'end')\n            .attr('transform', null)\n            .text(function (d) {\n                return d.name;\n            })\n            .filter(function (d) {\n                return d.x < width / 2;\n            })\n            .attr('x', 6 + sankey.nodeWidth())\n            .attr('text-anchor', 'start');\n\n        // the function for moving the nodes\n        function dragmove(d) {\n            d3\n                .select(this)\n                .attr(\n                    'transform',\n                    'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')'\n                );\n            sankey.relayout();\n            link.attr('d', path);\n        }\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        var self = this;\n        ctrl.events.on('render', self.setup.bind(self));\n        ctrl.events.on('refresh', self.setup.bind(self));\n    }\n}\n\nNetSageSankey.templateUrl = 'module.html';\n"]}